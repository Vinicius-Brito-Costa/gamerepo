[{"C:\\wamp64\\www\\React\\netflix\\src\\index.js":"1","C:\\wamp64\\www\\React\\netflix\\src\\App.js":"2","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\cabecalho.js":"3","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\rotas.js":"4","C:\\wamp64\\www\\React\\netflix\\src\\paginas\\paginaInicial.js":"5","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\banner_principal.js":"6","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\rodape.js":"7","C:\\wamp64\\www\\React\\netflix\\src\\paginas\\fila.js":"8","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\card_jogo.js":"9","C:\\wamp64\\www\\React\\netflix\\src\\paginas\\cadastroJogos.js":"10","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\apiRAWG.js":"11","C:\\wamp64\\www\\React\\netflix\\src\\reducers\\index.js":"12","C:\\wamp64\\www\\React\\netflix\\src\\reducers\\usuario.js":"13","C:\\wamp64\\www\\React\\netflix\\src\\reducers\\pagina_principal.js":"14","C:\\wamp64\\www\\React\\netflix\\src\\paginas\\pesquisa.js":"15","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\lista_jogos.js":"16","C:\\wamp64\\www\\React\\netflix\\src\\reducers\\pesquisa.js":"17","C:\\wamp64\\www\\React\\netflix\\src\\actions\\pesquisa.js":"18","C:\\wamp64\\www\\React\\netflix\\src\\actions\\usuario.js":"19","C:\\wamp64\\www\\React\\netflix\\src\\paginas\\login.js":"20","C:\\wamp64\\www\\React\\netflix\\src\\paginas\\jogo.js":"21","C:\\wamp64\\www\\React\\netflix\\src\\javascript\\funcoes.js":"22","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\banner_jogo_principal.js":"23","C:\\wamp64\\www\\React\\netflix\\src\\actions\\paginaPrincipal.js":"24","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\lista_devs.js":"25","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\card_dev.js":"26","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\placeholder\\usuarioSemJogo.js":"27","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\placeholder\\loading.js":"28","C:\\wamp64\\www\\React\\netflix\\src\\paginas\\dev.js":"29","C:\\wamp64\\www\\React\\netflix\\src\\componentes\\banner_dev_principal.js":"30","C:\\wamp64\\www\\React\\netflix\\src\\paginas\\minhaLista.js":"31","C:\\wamp64\\www\\React\\netflix\\src\\paginas\\cadastro.js":"32"},{"size":434,"mtime":1611771912673,"results":"33","hashOfConfig":"34"},{"size":430,"mtime":1607906695365,"results":"35","hashOfConfig":"34"},{"size":7190,"mtime":1612999543930,"results":"36","hashOfConfig":"34"},{"size":2599,"mtime":1613001682103,"results":"37","hashOfConfig":"34"},{"size":6403,"mtime":1612993997189,"results":"38","hashOfConfig":"34"},{"size":1658,"mtime":1612750720027,"results":"39","hashOfConfig":"34"},{"size":1247,"mtime":1612054140869,"results":"40","hashOfConfig":"34"},{"size":336,"mtime":1608238017943,"results":"41","hashOfConfig":"34"},{"size":5070,"mtime":1612999873761,"results":"42","hashOfConfig":"34"},{"size":5530,"mtime":1612060050461,"results":"43","hashOfConfig":"34"},{"size":13471,"mtime":1613004142024,"results":"44","hashOfConfig":"34"},{"size":586,"mtime":1612800063419,"results":"45","hashOfConfig":"34"},{"size":1935,"mtime":1612999960463,"results":"46","hashOfConfig":"34"},{"size":446,"mtime":1612445068185,"results":"47","hashOfConfig":"34"},{"size":2587,"mtime":1612835922245,"results":"48","hashOfConfig":"34"},{"size":1058,"mtime":1612060046245,"results":"49","hashOfConfig":"34"},{"size":296,"mtime":1612047898699,"results":"50","hashOfConfig":"34"},{"size":111,"mtime":1611949528908,"results":"51","hashOfConfig":"34"},{"size":975,"mtime":1612808341075,"results":"52","hashOfConfig":"34"},{"size":2403,"mtime":1613000941520,"results":"53","hashOfConfig":"34"},{"size":7769,"mtime":1613003980988,"results":"54","hashOfConfig":"34"},{"size":130,"mtime":1612048304385,"results":"55","hashOfConfig":"34"},{"size":2286,"mtime":1612993759638,"results":"56","hashOfConfig":"34"},{"size":152,"mtime":1612065235030,"results":"57","hashOfConfig":"34"},{"size":733,"mtime":1612740365338,"results":"58","hashOfConfig":"34"},{"size":2041,"mtime":1613004011560,"results":"59","hashOfConfig":"34"},{"size":673,"mtime":1613003955739,"results":"60","hashOfConfig":"34"},{"size":371,"mtime":1613003993726,"results":"61","hashOfConfig":"34"},{"size":2446,"mtime":1612993620049,"results":"62","hashOfConfig":"34"},{"size":722,"mtime":1612747217713,"results":"63","hashOfConfig":"34"},{"size":5472,"mtime":1613003935263,"results":"64","hashOfConfig":"34"},{"size":2813,"mtime":1612994123868,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"16t4pv3",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\wamp64\\www\\React\\netflix\\src\\index.js",[],["132","133"],"C:\\wamp64\\www\\React\\netflix\\src\\App.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\cabecalho.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\rotas.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\paginas\\paginaInicial.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\banner_principal.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\rodape.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\paginas\\fila.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\card_jogo.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\paginas\\cadastroJogos.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\apiRAWG.js",["134","135","136","137"],"async function fetchGame(id) {\r\n    let resultado = await fetch(`https://api.rawg.io/api/games/${id}`);\r\n    let resultadoJson = await resultado.json();\r\n    return resultadoJson;\r\n}\r\nexport async function pegarDev(id) {\r\n    let resultado = await fetch(`https://api.rawg.io/api/creators/${id}`);\r\n    let resultadoJson = await resultado.json();\r\n    return resultadoJson;\r\n}\r\n\r\nexport async function pegarJogosEstado(jogos, estado) {\r\n    let json = [];\r\n    console.log('chamou pegar jogos')\r\n    for (var i = 0; i < jogos.length; i++) {\r\n        let resultadoJson = await fetchGame(jogos[i]['id_jogo']);\r\n        console.log(\"ID: \" + jogos[i]['id_jogo'] + \"\\n    Nome: \" + resultadoJson.name)\r\n        json.push(resultadoJson);\r\n        if (i === 0) {\r\n            estado.bannerPrincipal(json[0]);\r\n        }\r\n        if (i % 3 === 0 && i !== 0) {\r\n            estado.props.AtualizarListaJogos(json);\r\n            estado.setState({\r\n                jogos: json,\r\n                isLoading: false\r\n            })\r\n            console.log(estado.state.isLoading)\r\n        }\r\n        if (!estado._estaMontado) {\r\n            estado.setState({\r\n                jogos: json,\r\n                isLoading: false\r\n            })\r\n            break;\r\n        }\r\n    }\r\n    estado.setState({\r\n        jogos: json,\r\n        isLoading: false\r\n    })\r\n    estado.props.AtualizarListaJogos(json);\r\n}\r\nexport async function pegarJogos(jogos, estado) {\r\n    let json = [];\r\n    for (var i = 0; i < jogos.length; i++) {\r\n        let resultado = await fetch(`https://api.rawg.io/api/games/${jogos[i]['id_jogo']}`);\r\n        let resultadoJson = await resultado.json();\r\n        console.log(\"ID: \" + jogos[i]['id_jogo'] + \"\\n    Nome: \" + resultadoJson.name)\r\n        json.push(resultadoJson);\r\n        if (i % 3 === 0 && i !== 0) {\r\n            estado.setState({\r\n                jogos: json\r\n            })\r\n        }\r\n    }\r\n    return json\r\n}\r\nexport async function cadastrarJogo(estado, id_usuario, id_jogo) {\r\n    const url = `http://localhost:777/cadastroJogosUsuario`;\r\n    let json = {\r\n        id_usuario: id_usuario,\r\n        id_jogo: id_jogo\r\n    };\r\n\r\n    let cabecalho = {\r\n        method: 'POST',\r\n        body: JSON.stringify(json),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    estado.setState({\r\n        favorito: !estado.state.favorito\r\n    })\r\n    estado.props.Load()\r\n    await fetch(url, cabecalho);\r\n\r\n    return true;\r\n}\r\nexport async function procurarJogo(pesquisa, estado, numeroPaginas = 1) {\r\n    let pages = 1;\r\n    let continuar = true;\r\n    let jogos = []\r\n    const url = `https://api.rawg.io/api/games?page=${pages}&search=${pesquisa}&search_precise=true&exclude_additions=true`;\r\n    while (continuar) {\r\n        await fetch(url)\r\n            .then((resultado) => {\r\n                let json = resultado.json();\r\n                return json\r\n            })\r\n            .then((json) => {\r\n                for (let i = 0; i < json.results.length; i++) {\r\n                    jogos.push(json.results[i]);\r\n                }\r\n                if (json.next !== null && pages <= numeroPaginas) {\r\n                    pages += 1;\r\n                } else {\r\n                    continuar = false;\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    estado.setState({\r\n        jogosEncontrados: jogos\r\n    });\r\n}\r\nexport async function pegarParametro(id_jogo, parametro) {\r\n    let resultado = await fetch(`https://api.rawg.io/api/games/${id_jogo}`)\r\n    let json = await resultado.json();\r\n    return json[parametro]\r\n}\r\n\r\nexport async function selecionarJogo(jogo, estado) {\r\n    if (document.getElementById(\"cabecalho-barra-pesquisa\")) {\r\n        document.getElementById(\"cabecalho-barra-pesquisa\").value = jogo.name;\r\n    }\r\n    estado.setState({\r\n        previewNome: jogo.name\r\n    });\r\n    estado.setState({\r\n        previewId: jogo.id\r\n    });\r\n    let url = `https://api.rawg.io/api/games/${jogo.id}`;\r\n    fetch(url).then((resposta) => {\r\n        let json = resposta.json();\r\n        return json;\r\n    }).then(() => {\r\n        if (estado.state.previewId !== 0) {\r\n            document.getElementById(\"cabecalho-submit\").style.display = 'block';\r\n        }\r\n    })\r\n    //estado.setState({ jogosEncontrados: []});\r\n}\r\n\r\nexport async function jogoLojas(id_jogo) {\r\n    let url = `https://api.rawg.io/api/games/${id_jogo}/stores`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let lojas = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        lojas.push(json.results[i]);\r\n    }\r\n    return lojas;\r\n}\r\nexport async function jogoTrailers(id_jogo) {\r\n    let url = `https://api.rawg.io/api/games/${id_jogo}/movies`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let trailers = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        trailers.push(json.results[i]);\r\n    }\r\n    return trailers;\r\n}\r\nexport async function jogosSugeridos(id_jogo) {\r\n    let url = `https://api.rawg.io/api/games/${id_jogo}/suggested`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let jogos = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        jogos.push(json.results[i]);\r\n    }\r\n    return jogos;\r\n}\r\nexport async function jogosMesmaSerie(id_jogo) {\r\n    let url = `https://api.rawg.io/api/games/${id_jogo}/game-series`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let jogos = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        jogos.push(json.results[i]);\r\n    }\r\n    return jogos;\r\n}\r\nexport async function screenshotsJogo(id_jogo) {\r\n    let url = `https://api.rawg.io/api/games/${id_jogo}/screenshots`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let screenshots = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        screenshots.push(json.results[i].image);\r\n    }\r\n    return screenshots;\r\n}\r\nexport async function desenvolvedoresJogo(id_jogo) {\r\n    let url = `https://api.rawg.io/api/games/${id_jogo}/development-team`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let desenvolvedores = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        desenvolvedores.push(json.results[i]);\r\n    }\r\n    return desenvolvedores;\r\n}\r\nexport async function jogosDesenvolvedor(id_dev) {\r\n    let url = `https://api.rawg.io/api/games/${id_dev}/development-team`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let desenvolvedores = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        desenvolvedores.push(json.results[i]);\r\n    }\r\n    return desenvolvedores;\r\n}\r\nexport async function jogosAclamados(numeroJogos, estado) {\r\n    let pages = 1;\r\n    let continuar = true;\r\n    let jogos = [];\r\n    while (continuar) {\r\n        const url = `https://api.rawg.io/api/games?ordering=-metacritic&page=${pages}`;\r\n        await fetch(url)\r\n            .then((resultado) => {\r\n                let json = resultado.json();\r\n                return json\r\n            })\r\n            .then(async (json) => {\r\n                for (let i = 0; i < json.results.length; i++) {\r\n                    if (json.results[i].background_image !== null) {\r\n                        jogos.push(json.results[i]);\r\n\r\n                        if (jogos.length === 1) {\r\n                            let jogo = jogos[0];\r\n                            jogo.description = await pegarParametro(json.results[i].id, 'description')\r\n                            estado.bannerPrincipal(jogo)\r\n                        }\r\n                        if (i % 3 === 0 && i !== 0) {\r\n                            estado.setState({\r\n                                jogosAclamados: jogos,\r\n                                isLoading: false\r\n                            })\r\n                            console.log(estado.state.isLoading)\r\n                        }\r\n                        if (!estado._estaMontado) {\r\n                            estado.setState({\r\n                                jogosAclamados: jogos,\r\n                                isLoading: false\r\n                            })\r\n                            break;\r\n                        }\r\n                        if (jogos.length >= numeroJogos) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (json.next !== null && jogos.length < numeroJogos) {\r\n                    pages += 1;\r\n                    console.log(pages)\r\n                } else {\r\n                    continuar = false;\r\n                }\r\n            })\r\n\r\n    }\r\n    console.log(jogos)\r\n    estado.setState({\r\n        jogosAclamados: jogos,\r\n        isLoading: false\r\n    })\r\n    //return jogos;\r\n}\r\nexport async function jogosLancamento(numeroJogos, estado) {\r\n    let d = new Date()\r\n    let ano = d.getFullYear()\r\n    let mes = d.getMonth()\r\n    let dia = d.getDate()\r\n    if(mes < 10) mes = '0' + mes.toString();\r\n    if(dia < 10) dia = '0' + dia.toString();\r\n    let hoje = ano + '-' + mes + '-' + dia\r\n    if (parseInt(mes) === 1) {\r\n        ano--;\r\n        mes = 11\r\n    } else if (mes === 2) {\r\n        ano--;\r\n        mes = 12\r\n    } else {\r\n        mes -= 2\r\n    }\r\n    if(mes < 10) mes = '0' + mes.toString();\r\n    if(dia < 10) dia = '0' + dia.toString();\r\n    let desde = ano + '-' + mes + '-' + dia\r\n    console.log(hoje)\r\n    console.log(desde)\r\n    let pages = 1;\r\n    let continuar = true;\r\n    let jogos = [];\r\n    while (continuar) {\r\n        const url = `https://api.rawg.io/api/games?dates=${desde},${hoje}&ordering=-added&page=${pages}`;\r\n        console.log(url)\r\n        await fetch(url)\r\n            .then((resultado) => {\r\n                let json = resultado.json();\r\n                return json\r\n            })\r\n            .then(async (json) => {\r\n                for (let i = 0; i < json.results.length; i++) {\r\n                    if (json.results[i].background_image !== null) {\r\n                        jogos.push(json.results[i]);\r\n                        if (i % 3 === 0 && i !== 0) {\r\n                            estado.setState({\r\n                                jogosLancamento: jogos\r\n                            })\r\n                            console.log(estado.state.isLoading)\r\n                        }\r\n                        if (!estado._estaMontado) {\r\n                            estado.setState({\r\n                                jogosLancamento: jogos\r\n                            })\r\n                            break;\r\n                        }\r\n                        if (jogos.length >= numeroJogos) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (json.next !== null && jogos.length < numeroJogos) {\r\n                    pages += 1;\r\n                    console.log(pages)\r\n                } else {\r\n                    continuar = false;\r\n                }\r\n            })\r\n\r\n    }\r\n    console.log(jogos)\r\n    estado.setState({\r\n        jogosLancamento: jogos\r\n    })\r\n    //return jogos;\r\n}\r\n\r\nexport async function futurosLancamentos(numeroJogos, estado) {\r\n    let d = new Date()\r\n    let ano = d.getFullYear()\r\n    let mes = d.getMonth()\r\n    let dia = d.getDate()\r\n    if(mes < 10) mes = '0' + mes.toString();\r\n    if(dia < 10) dia = '0' + dia.toString();\r\n    let hoje = ano + '-' + mes + '-' + dia\r\n    let ate = (ano + 1) + '-' + mes + '-' + dia\r\n    let pages = 1;\r\n    let continuar = true;\r\n    let jogos = [];\r\n    while (continuar) {\r\n        const url = `https://api.rawg.io/api/games?dates=${hoje},${ate}&ordering=-added&page=${pages}`;\r\n        await fetch(url)\r\n            .then((resultado) => {\r\n                let json = resultado.json();\r\n                return json\r\n            })\r\n            .then(async (json) => {\r\n                for (let i = 0; i < json.results.length; i++) {\r\n                    if (json.results[i].background_image !== null) {\r\n                        jogos.push(json.results[i]);\r\n\r\n                        if (jogos.length === 1) {\r\n                            let jogo = jogos[0];\r\n                            jogo.description = await pegarParametro(json.results[i].id, 'description')\r\n                            estado.bannerPrincipal(jogo)\r\n                        }\r\n                        if (i % 3 === 0 && i !== 0) {\r\n                            estado.setState({\r\n                                futurosLancamentos: jogos\r\n                            })\r\n                            console.log(estado.state.isLoading)\r\n                        }\r\n                        if (!estado._estaMontado) {\r\n                            estado.setState({\r\n                                futurosLancamentos: jogos\r\n                            })\r\n                            break;\r\n                        }\r\n                        if (jogos.length >= numeroJogos) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (json.next !== null && jogos.length < numeroJogos) {\r\n                    pages += 1;\r\n                    console.log(pages)\r\n                } else {\r\n                    continuar = false;\r\n                }\r\n            })\r\n\r\n    }\r\n    console.log(jogos)\r\n    estado.setState({\r\n        futurosLancamentos: jogos\r\n    })\r\n}","C:\\wamp64\\www\\React\\netflix\\src\\reducers\\index.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\reducers\\usuario.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\reducers\\pagina_principal.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\paginas\\pesquisa.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\lista_jogos.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\reducers\\pesquisa.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\actions\\pesquisa.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\actions\\usuario.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\paginas\\login.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\paginas\\jogo.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\javascript\\funcoes.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\banner_jogo_principal.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\actions\\paginaPrincipal.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\lista_devs.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\card_dev.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\placeholder\\usuarioSemJogo.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\placeholder\\loading.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\paginas\\dev.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\componentes\\banner_dev_principal.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\paginas\\minhaLista.js",[],"C:\\wamp64\\www\\React\\netflix\\src\\paginas\\cadastro.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":92,"column":19,"nodeType":"144","messageId":"145","endLine":101,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":218,"column":19,"nodeType":"144","messageId":"145","endLine":253,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":296,"column":19,"nodeType":"144","messageId":"145","endLine":323,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":352,"column":19,"nodeType":"144","messageId":"145","endLine":385,"endColumn":14},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'pages', 'pages', 'continuar'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]