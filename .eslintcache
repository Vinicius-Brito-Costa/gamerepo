[{"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\index.js":"1","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\App.js":"2","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\reducers\\index.js":"3","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\cabecalho.js":"4","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\rodape.js":"5","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\reducers\\usuario.js":"6","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\reducers\\pagina_principal.js":"7","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\reducers\\pesquisa.js":"8","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\apiRAWG.js":"9","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\rotas.js":"10","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\actions\\pesquisa.js":"11","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\actions\\usuario.js":"12","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\paginas\\paginaInicial.js":"13","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\paginas\\pesquisa.js":"14","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\paginas\\jogo.js":"15","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\paginas\\dev.js":"16","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\actions\\paginaPrincipal.js":"17","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\banner_principal.js":"18","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\lista_jogos.js":"19","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\card_jogo.js":"20","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\banner_jogo_principal.js":"21","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\lista_devs.js":"22","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\banner_dev_principal.js":"23","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\placeholder\\loading.js":"24","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\placeholder\\usuarioSemJogo.js":"25","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\javascript\\funcoes.js":"26","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\card_dev.js":"27","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\paginas\\landing.js":"28","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\imagensLandingPage.js":"29"},{"size":452,"mtime":1613673821697,"results":"30","hashOfConfig":"31"},{"size":448,"mtime":1613673820387,"results":"32","hashOfConfig":"31"},{"size":380,"mtime":1614058523282,"results":"33","hashOfConfig":"31"},{"size":7159,"mtime":1614058573722,"results":"34","hashOfConfig":"31"},{"size":1247,"mtime":1613673821620,"results":"35","hashOfConfig":"31"},{"size":534,"mtime":1614058440237,"results":"36","hashOfConfig":"31"},{"size":342,"mtime":1614028513923,"results":"37","hashOfConfig":"31"},{"size":296,"mtime":1613673821706,"results":"38","hashOfConfig":"31"},{"size":13469,"mtime":1614040953098,"results":"39","hashOfConfig":"31"},{"size":786,"mtime":1614057977383,"results":"40","hashOfConfig":"31"},{"size":111,"mtime":1613673820389,"results":"41","hashOfConfig":"31"},{"size":248,"mtime":1614058554675,"results":"42","hashOfConfig":"31"},{"size":6250,"mtime":1614058412800,"results":"43","hashOfConfig":"31"},{"size":2587,"mtime":1613673821704,"results":"44","hashOfConfig":"31"},{"size":5112,"mtime":1614058302219,"results":"45","hashOfConfig":"31"},{"size":2446,"mtime":1613673821701,"results":"46","hashOfConfig":"31"},{"size":152,"mtime":1613673820389,"results":"47","hashOfConfig":"31"},{"size":1617,"mtime":1613964281817,"results":"48","hashOfConfig":"31"},{"size":1066,"mtime":1613955905309,"results":"49","hashOfConfig":"31"},{"size":3838,"mtime":1614058098786,"results":"50","hashOfConfig":"31"},{"size":2301,"mtime":1613965203953,"results":"51","hashOfConfig":"31"},{"size":733,"mtime":1613673821618,"results":"52","hashOfConfig":"31"},{"size":722,"mtime":1613673821614,"results":"53","hashOfConfig":"31"},{"size":371,"mtime":1613673821619,"results":"54","hashOfConfig":"31"},{"size":673,"mtime":1613673821619,"results":"55","hashOfConfig":"31"},{"size":132,"mtime":1614032078586,"results":"56","hashOfConfig":"31"},{"size":2041,"mtime":1613673821617,"results":"57","hashOfConfig":"31"},{"size":738,"mtime":1614058682963,"results":"58","hashOfConfig":"31"},{"size":324,"mtime":1613960772774,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"fk0eta",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\index.js",[],["121","122"],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\App.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\reducers\\index.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\cabecalho.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\rodape.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\reducers\\usuario.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\reducers\\pagina_principal.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\reducers\\pesquisa.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\apiRAWG.js",["123","124","125","126"],"async function fetchGame(id) {\r\n    let resultado = await fetch(`https://api.rawg.io/api/games/${id}`);\r\n    let resultadoJson = await resultado.json();\r\n    return resultadoJson;\r\n}\r\nexport async function pegarDev(id) {\r\n    let resultado = await fetch(`https://api.rawg.io/api/creators/${id}`);\r\n    let resultadoJson = await resultado.json();\r\n    return resultadoJson;\r\n}\r\n\r\nexport async function pegarJogosEstado(jogos, estado) {\r\n    let json = [];\r\n    for (var i = 0; i < jogos.length; i++) {\r\n        let resultadoJson = await fetchGame(jogos[i]['id_jogo']);\r\n        json.push(resultadoJson);\r\n        if (i === 0) {\r\n            estado.bannerPrincipal(json[0]);\r\n        }\r\n        if (i % 3 === 0 && i !== 0) {\r\n            estado.props.AtualizarListaJogos(json);\r\n            estado.setState({\r\n                jogos: json,\r\n                isLoading: false\r\n            })\r\n        }\r\n        if (!estado._estaMontado) {\r\n            estado.setState({\r\n                jogos: json,\r\n                isLoading: false\r\n            })\r\n            break;\r\n        }\r\n    }\r\n    estado.setState({\r\n        jogos: json,\r\n        isLoading: false\r\n    })\r\n    estado.props.AtualizarListaJogos(json);\r\n}\r\nexport async function pegarJogos(jogos, estado) {\r\n    let json = [];\r\n    for (var i = 0; i < jogos.length; i++) {\r\n        let resultado = await fetch(`https://api.rawg.io/api/games/${jogos[i]['id_jogo']}`);\r\n        let resultadoJson = await resultado.json();\r\n        // console.log(\"ID: \" + jogos[i]['id_jogo'] + \"\\n    Nome: \" + resultadoJson.name)\r\n        json.push(resultadoJson);\r\n        if (i % 3 === 0 && i !== 0) {\r\n            estado.setState({\r\n                jogos: json\r\n            })\r\n        }\r\n    }\r\n    return json\r\n}\r\nexport async function cadastrarJogo(estado, id_usuario, id_jogo) {\r\n    const url = `https://rest-api-gameflix.herokuapp.com/cadastroJogosUsuario`;\r\n    let json = {\r\n        id_usuario: id_usuario,\r\n        id_jogo: id_jogo\r\n    };\r\n\r\n    let cabecalho = {\r\n        method: 'POST',\r\n        body: JSON.stringify(json),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    estado.setState({\r\n        favorito: !estado.state.favorito\r\n    })\r\n    estado.props.Load()\r\n    await fetch(url, cabecalho);\r\n\r\n    return true;\r\n}\r\nexport async function procurarJogo(pesquisa, estado, numeroPaginas = 1) {\r\n    let pages = 1;\r\n    let continuar = true;\r\n    let jogos = []\r\n    const url = `https://api.rawg.io/api/games?page=${pages}&search=${pesquisa}&search_precise=true&exclude_additions=true`;\r\n    while (continuar) {\r\n        await fetch(url)\r\n            .then((resultado) => {\r\n                let json = resultado.json();\r\n                return json\r\n            })\r\n            .then((json) => {\r\n                for (let i = 0; i < json.results.length; i++) {\r\n                    jogos.push(json.results[i]);\r\n                }\r\n                if (json.next !== null && pages <= numeroPaginas) {\r\n                    pages += 1;\r\n                } else {\r\n                    continuar = false;\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    estado.setState({\r\n        jogosEncontrados: jogos\r\n    });\r\n}\r\nexport async function pegarParametro(id_jogo, parametro) {\r\n    let resultado = await fetch(`https://api.rawg.io/api/games/${id_jogo}`)\r\n    let json = await resultado.json();\r\n    return json[parametro]\r\n}\r\n\r\nexport async function selecionarJogo(jogo, estado) {\r\n    if (document.getElementById(\"cabecalho-barra-pesquisa\")) {\r\n        document.getElementById(\"cabecalho-barra-pesquisa\").value = jogo.name;\r\n    }\r\n    estado.setState({\r\n        previewNome: jogo.name\r\n    });\r\n    estado.setState({\r\n        previewId: jogo.id\r\n    });\r\n    let url = `https://api.rawg.io/api/games/${jogo.id}`;\r\n    fetch(url).then((resposta) => {\r\n        let json = resposta.json();\r\n        return json;\r\n    }).then(() => {\r\n        if (estado.state.previewId !== 0) {\r\n            document.getElementById(\"cabecalho-submit\").style.display = 'block';\r\n        }\r\n    })\r\n    //estado.setState({ jogosEncontrados: []});\r\n}\r\n\r\nexport async function jogoLojas(id_jogo) {\r\n    let url = `https://api.rawg.io/api/games/${id_jogo}/stores`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let lojas = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        lojas.push(json.results[i]);\r\n    }\r\n    return lojas;\r\n}\r\nexport async function jogoTrailers(id_jogo) {\r\n    let url = `https://api.rawg.io/api/games/${id_jogo}/movies`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let trailers = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        trailers.push(json.results[i]);\r\n    }\r\n    return trailers;\r\n}\r\nexport async function jogosSugeridos(id_jogo) {\r\n    let url = `https://api.rawg.io/api/games/${id_jogo}/suggested`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let jogos = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        jogos.push(json.results[i]);\r\n    }\r\n    return jogos;\r\n}\r\nexport async function jogosMesmaSerie(id_jogo) {\r\n    let url = `https://api.rawg.io/api/games/${id_jogo}/game-series`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let jogos = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        jogos.push(json.results[i]);\r\n    }\r\n    return jogos;\r\n}\r\nexport async function screenshotsJogo(id_jogo) {\r\n    let url = `https://api.rawg.io/api/games/${id_jogo}/screenshots`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let screenshots = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        screenshots.push(json.results[i].image);\r\n    }\r\n    return screenshots;\r\n}\r\nexport async function desenvolvedoresJogo(id_jogo) {\r\n    let url = `https://api.rawg.io/api/games/${id_jogo}/development-team`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let desenvolvedores = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        desenvolvedores.push(json.results[i]);\r\n    }\r\n    return desenvolvedores;\r\n}\r\nexport async function jogosDesenvolvedor(id_dev) {\r\n    let url = `https://api.rawg.io/api/games/${id_dev}/development-team`;\r\n    let resultado = await fetch(url);\r\n    let json = await resultado.json();\r\n    let desenvolvedores = [];\r\n    for (let i = 0; i < json.results.length; i++) {\r\n        desenvolvedores.push(json.results[i]);\r\n    }\r\n    return desenvolvedores;\r\n}\r\nexport async function jogosAclamados(numeroJogos, estado) {\r\n    let pages = 1;\r\n    let continuar = true;\r\n    let jogos = [];\r\n    while (continuar) {\r\n        const url = `https://api.rawg.io/api/games?ordering=-metacritic&page=${pages}`;\r\n        await fetch(url)\r\n            .then((resultado) => {\r\n                let json = resultado.json();\r\n                return json\r\n            })\r\n            .then(async (json) => {\r\n                for (let i = 0; i < json.results.length; i++) {\r\n                    if (json.results[i].background_image !== null) {\r\n                        jogos.push(json.results[i]);\r\n\r\n                        if (jogos.length === 1) {\r\n                            let jogo = jogos[0];\r\n                            jogo.description = await pegarParametro(json.results[i].id, 'description')\r\n                            estado.bannerPrincipal(jogo)\r\n                        }\r\n                        if (i % 3 === 0 && i !== 0) {\r\n                            estado.setState({\r\n                                jogosAclamados: jogos,\r\n                                isLoading: false\r\n                            })\r\n                        }\r\n                        if (!estado._estaMontado) {\r\n                            estado.setState({\r\n                                jogosAclamados: jogos,\r\n                                isLoading: false\r\n                            })\r\n                            break;\r\n                        }\r\n                        if (jogos.length >= numeroJogos) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (json.next !== null && jogos.length < numeroJogos) {\r\n                    pages += 1;\r\n                } else {\r\n                    continuar = false;\r\n                }\r\n            })\r\n\r\n    }\r\n    let listaRandomica = jogos.sort(() => Math.random() - 0.5)\r\n    estado.setState({\r\n        jogosAclamados: listaRandomica,\r\n        isLoading: false\r\n    })\r\n    //return jogos;\r\n}\r\nexport async function jogosLancamento(numeroJogos, estado) {\r\n    let d = new Date()\r\n    let ano = d.getFullYear()\r\n    let mes = d.getMonth()\r\n    let dia = d.getDate()\r\n    if(mes < 10) mes = '0' + mes.toString();\r\n    if(dia < 10) dia = '0' + dia.toString();\r\n    let hoje = ano + '-' + mes + '-' + dia\r\n    if (parseInt(mes) === 1) {\r\n        ano--;\r\n        mes = 11\r\n    } else if (mes === 2) {\r\n        ano--;\r\n        mes = 12\r\n    } else {\r\n        mes -= 2\r\n    }\r\n    if(mes < 10) mes = '0' + mes.toString();\r\n    if(dia < 10) dia = '0' + dia.toString();\r\n    let desde = ano + '-' + mes + '-' + dia\r\n    let pages = 1;\r\n    let continuar = true;\r\n    let jogos = [];\r\n    while (continuar) {\r\n        const url = `https://api.rawg.io/api/games?dates=${desde},${hoje}&ordering=-added&page=${pages}`;\r\n    \r\n        await fetch(url)\r\n            .then((resultado) => {\r\n                let json = resultado.json();\r\n                return json\r\n            })\r\n            .then(async (json) => {\r\n                for (let i = 0; i < json.results.length; i++) {\r\n                    if (json.results[i].background_image !== null) {\r\n                        jogos.push(json.results[i]);\r\n                        if (i % 3 === 0 && i !== 0) {\r\n                            let listaRandomica = jogos.sort(() => Math.random() - 0.5)\r\n                            estado.setState({\r\n                                jogosLancamento: listaRandomica\r\n                            })\r\n                        }\r\n                        if (!estado._estaMontado) {\r\n                            let listaRandomica = jogos.sort(() => Math.random() - 0.5)\r\n                            estado.setState({\r\n                                jogosLancamento: listaRandomica\r\n                            })\r\n                            break;\r\n                        }\r\n                        if (jogos.length >= numeroJogos) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (json.next !== null && jogos.length < numeroJogos) {\r\n                    pages += 1;\r\n                } else {\r\n                    continuar = false;\r\n                }\r\n            })\r\n\r\n    }\r\n    let listaRandomica = jogos.sort(() => Math.random() - 0.5)\r\n    estado.setState({\r\n        jogosLancamento: listaRandomica\r\n    })\r\n    //return jogos;\r\n}\r\n\r\nexport async function futurosLancamentos(numeroJogos, estado) {\r\n    let d = new Date()\r\n    let ano = d.getFullYear()\r\n    let mes = d.getMonth()\r\n    let dia = d.getDate()\r\n    if(mes < 10) mes = '0' + mes.toString();\r\n    if(dia < 10) dia = '0' + dia.toString();\r\n    let hoje = ano + '-' + mes + '-' + dia\r\n    let ate = (ano + 1) + '-' + mes + '-' + dia\r\n    let pages = 1;\r\n    let continuar = true;\r\n    let jogos = [];\r\n    while (continuar) {\r\n        const url = `https://api.rawg.io/api/games?dates=${hoje},${ate}&ordering=-added&page=${pages}`;\r\n        await fetch(url)\r\n            .then((resultado) => {\r\n                let json = resultado.json();\r\n                return json\r\n            })\r\n            .then(async (json) => {\r\n                for (let i = 0; i < json.results.length; i++) {\r\n                    if (json.results[i].background_image !== null) {\r\n                        jogos.push(json.results[i]);\r\n\r\n                        if (jogos.length === 1) {\r\n                            let jogo = jogos[0];\r\n                            jogo.description = await pegarParametro(json.results[i].id, 'description')\r\n                            estado.bannerPrincipal(jogo)\r\n                        }\r\n                        if (i % 3 === 0 && i !== 0) {\r\n                            let listaRandomica = jogos.sort(() => Math.random() - 0.5)\r\n                            estado.setState({\r\n                                futurosLancamentos: listaRandomica\r\n                            })\r\n                        }\r\n                        if (!estado._estaMontado) {\r\n                            let listaRandomica = jogos.sort(() => Math.random() - 0.5)\r\n                            estado.setState({\r\n                                futurosLancamentos: listaRandomica\r\n                            })\r\n                            break;\r\n                        }\r\n                        if (jogos.length >= numeroJogos) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (json.next !== null && jogos.length < numeroJogos) {\r\n                    pages += 1;\r\n                } else {\r\n                    continuar = false;\r\n                }\r\n            })\r\n\r\n    }\r\n    let listaRandomica = jogos.sort(() => Math.random() - 0.5)\r\n    estado.setState({\r\n        futurosLancamentos: listaRandomica\r\n    })\r\n}","C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\rotas.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\actions\\pesquisa.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\actions\\usuario.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\paginas\\paginaInicial.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\paginas\\pesquisa.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\paginas\\jogo.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\paginas\\dev.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\actions\\paginaPrincipal.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\banner_principal.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\lista_jogos.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\card_jogo.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\banner_jogo_principal.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\lista_devs.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\banner_dev_principal.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\placeholder\\loading.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\placeholder\\usuarioSemJogo.js",[],["127","128"],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\javascript\\funcoes.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\card_dev.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\paginas\\landing.js",[],"C:\\wamp64\\www\\Projetos Pessoais\\gamerepo\\src\\componentes\\imagensLandingPage.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":89,"column":19,"nodeType":"135","messageId":"136","endLine":98,"endColumn":14},{"ruleId":"133","severity":1,"message":"137","line":215,"column":19,"nodeType":"135","messageId":"136","endLine":248,"endColumn":14},{"ruleId":"133","severity":1,"message":"137","line":289,"column":19,"nodeType":"135","messageId":"136","endLine":316,"endColumn":14},{"ruleId":"133","severity":1,"message":"137","line":345,"column":19,"nodeType":"135","messageId":"136","endLine":378,"endColumn":14},{"ruleId":"129","replacedBy":"138"},{"ruleId":"131","replacedBy":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'pages', 'pages', 'continuar'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'pages', 'continuar'.",["140"],["141"],"no-global-assign","no-unsafe-negation"]